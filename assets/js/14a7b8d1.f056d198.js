"use strict";(self.webpackChunkmidiremote_v_1_docs=self.webpackChunkmidiremote_v_1_docs||[]).push([[235],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(r),m=i,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8328:(e,t,r)=>{r.d(t,{b0:()=>s,jC:()=>o,kI:()=>a});var n=r(7294);const i=e=>t=>{let{children:r}=t,i=[];return n.Children.forEach(r,(e=>{const t=e.props?.children?n.Children.toArray(e.props?.children):[];0===t.length?i.push(e):t.forEach(((e,t)=>{i.push(e)}))})),n.createElement("div",{className:`admonition alert alert--${e}`},n.createElement("div",{className:"admonition-content"},i))},o=i("secondary"),a=i("info"),s=i("danger")},624:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));r(8328),r(2263);const o={slug:"/versions",title:"API Versions + Compatibility",hide_table_of_contents:!1},a="Version History",s={unversionedId:"versionhistory",id:"versionhistory",title:"API Versions + Compatibility",description:"This chapter provides an overview of the version history for the MIDI Remote API, highlighting changes introduced in each version. Additionally, it explains considerations for maintaining backward compatibility when using different versions of the API with various versions of Cubase / Nuendo.",source:"@site/docs/04-versionhistory.md",sourceDirName:".",slug:"/versions",permalink:"/midiremote_api_doc/versions",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{slug:"/versions",title:"API Versions + Compatibility",hide_table_of_contents:!1},sidebar:"tutorialSidebar",previous:{title:"Real World Device",permalink:"/midiremote_api_doc/examples/realworlddevice"},next:{title:"New in v1.1",permalink:"/midiremote_api_doc/new_in_v1.1"}},l={},c=[{value:"Version 1.1",id:"version-11",level:2},{value:"Version 1.0",id:"version-10",level:2},{value:"Ensuring Backward Compatibility Across different Versions of the MIDI Remote API",id:"ensuring-backward-compatibility-across-different-versions-of-the-midi-remote-api",level:2},{value:"<strong>Feature Detection</strong>",id:"feature-detection",level:4},{value:"<strong>Fallback Mechanisms</strong>",id:"fallback-mechanisms",level:4}],u={toc:c},d="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"version-history"},"Version History"),(0,i.kt)("p",null,"This chapter provides an overview of the version history for the ",(0,i.kt)("strong",{parentName:"p"},"MIDI Remote API"),", highlighting changes introduced in each version. Additionally, it explains considerations for maintaining backward compatibility when using different versions of the API with various versions of ",(0,i.kt)("strong",{parentName:"p"},"Cubase / Nuendo"),"."),(0,i.kt)("h2",{id:"version-11"},"Version 1.1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added support for touch sensitive controls"),(0,i.kt)("li",{parentName:"ul"},"Added options to register IDLE callbacks")),(0,i.kt)("h2",{id:"version-10"},"Version 1.0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Initial release of the ",(0,i.kt)("strong",{parentName:"li"},"MIDI Remote API"),"."),(0,i.kt)("li",{parentName:"ul"},"Introduced core concepts, including ",(0,i.kt)("strong",{parentName:"li"},"Driver Setup"),", ",(0,i.kt)("strong",{parentName:"li"},"Surface Layout"),", and ",(0,i.kt)("strong",{parentName:"li"},"Host Mapping Pages"),"."),(0,i.kt)("li",{parentName:"ul"},"Supported basic communication between hardware MIDI controllers and ",(0,i.kt)("strong",{parentName:"li"},"Cubase / Nuendo"),".")),(0,i.kt)("h2",{id:"ensuring-backward-compatibility-across-different-versions-of-the-midi-remote-api"},"Ensuring Backward Compatibility Across different Versions of the MIDI Remote API"),(0,i.kt)("p",null,"Maintaining backward compatibility is crucial when working with different versions of the ",(0,i.kt)("strong",{parentName:"p"},"MIDI Remote API")," and various versions of ",(0,i.kt)("strong",{parentName:"p"},"Cubase / Nuendo"),". Backward compatibility ensures that scripts written using newer versions of the API can still function correctly with older versions of ",(0,i.kt)("strong",{parentName:"p"},"Cubase / Nuendo"),", even when new features have been introduced."),(0,i.kt)("h4",{id:"feature-detection"},(0,i.kt)("strong",{parentName:"h4"},"Feature Detection")),(0,i.kt)("p",null,"When developing scripts, always check for the availability of specific features or functionalities introduced in later versions of the API. Use conditional statements or feature detection mechanisms to ensure that your script behaves appropriately across different versions."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Code Example:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var midiremote_api = require('midiremote_api_v1');\nvar deviceDriver = midiremote_api.makeDeviceDriver('DocuVendor', 'ExampleDevice Mk I', 'Example Author');\nvar fader = deviceDriver.mSurface.makeFader(0, 0, 1, 1)\n\n// ...\n\n// backward compatibility: check API 1.1 feature exists\n// highlight-start\nif(fader.mSurfaceValue.mTouchState) {\n    var faderTouch = driver.mSurface.makeCustomValueVariable('faderTouch')\n    faderTouch.mMidiBinding.setInputPort(midiIn).setOutputPort(midiOut).bindToNote(0, 64)\n    fader.mSurfaceValue.mTouchState.bindTo(faderTouch)\n}\n// highlight-end\n")),(0,i.kt)("h4",{id:"fallback-mechanisms"},(0,i.kt)("strong",{parentName:"h4"},"Fallback Mechanisms")),(0,i.kt)("p",null,"Implement fallback mechanisms or alternative behaviors for cases where a specific feature is not supported by the version of ",(0,i.kt)("strong",{parentName:"p"},"Cubase / Nuendo")," being used. This ensures that your script remains functional even in older environments."))}p.isMDXComponent=!0}}]);