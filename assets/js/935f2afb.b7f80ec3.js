"use strict";(self.webpackChunkmidiremote_v_1_docs=self.webpackChunkmidiremote_v_1_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/midiremote_api_doc/","docId":"introduction"},{"type":"link","label":"Getting Started","href":"/midiremote_api_doc/getting-started","docId":"getting-started"},{"type":"category","label":"Code Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Simple Device","href":"/midiremote_api_doc/examples/simpledevice","docId":"Examples/simpledevice"},{"type":"link","label":"Next Device","href":"/midiremote_api_doc/examples/nextdevice","docId":"Examples/nextdevice"},{"type":"link","label":"Real World Device","href":"/midiremote_api_doc/examples/realworlddevice","docId":"Examples/realworlddevice"}],"href":"/midiremote_api_doc/code-examples"},{"type":"link","label":"API Versions + Compatibility","href":"/midiremote_api_doc/versions","docId":"versionhistory"},{"type":"link","label":"New in v1.1","href":"/midiremote_api_doc/new_in_v1.1","docId":"v1_1"},{"type":"category","label":"Advanced Topics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Device Detection","href":"/midiremote_api_doc/api-details/detection-unit","docId":"Advanced-Topics/device-detection"},{"type":"link","label":"Command Bindings","href":"/midiremote_api_doc/examples/commandbindings","docId":"Advanced-Topics/commandbindings"}],"href":"/midiremote_api_doc/advanced-topics"},{"type":"link","label":"API Reference","href":"/midiremote_api_doc/codedoc_api_reference","docId":"codedoc_api_reference"}]},"docs":{"Advanced-Topics/commandbindings":{"id":"Advanced-Topics/commandbindings","title":"Command Bindings","description":"Key Commands are essential for efficient software operation and are typically initiated by user-defined keystrokes. However, it\'s noteworthy that the same Key Commands can also be activated through hardware MIDI controllers. This dual accessibility provides users with a versatile and tactile means of executing commands, offering an additional layer of control and customization to enhance their music production workflows.","sidebar":"tutorialSidebar"},"Advanced-Topics/device-detection":{"id":"Advanced-Topics/device-detection","title":"Device Detection","description":"Automatic device detection plays an important role in the MIDI Remote API, significantly improving user experience. By identifying and configuring MIDI controllers automatically, manual setup by the user becomes obsolete. This simplifies the connection process, allowing users to focus on their creative work without being hindered by technical tasks.","sidebar":"tutorialSidebar"},"Advanced-Topics/index":{"id":"Advanced-Topics/index","title":"Advanced Topics","description":"","sidebar":"tutorialSidebar"},"codedoc_api_reference":{"id":"codedoc_api_reference","title":"API Reference","description":"}","sidebar":"tutorialSidebar"},"Examples/index":{"id":"Examples/index","title":"Code Examples","description":"","sidebar":"tutorialSidebar"},"Examples/nextdevice":{"id":"Examples/nextdevice","title":"Next Device","description":"Most MIDI hardware controllers have a repetitive layout.","sidebar":"tutorialSidebar"},"Examples/realworlddevice":{"id":"Examples/realworlddevice","title":"Real World Device","description":"This example demonstrates a full stack MIDI Remote API Script.","sidebar":"tutorialSidebar"},"Examples/simpledevice":{"id":"Examples/simpledevice","title":"Simple Device","description":"To get to know the basic semantics of the MIDI Remote API we will write a script for a fictional MIDI Controller having four encoder knobs. The visual representation in Cubase / Nuendo will appear like this:","sidebar":"tutorialSidebar"},"getting-started":{"id":"getting-started","title":"Getting Started","description":"To get started please perform these steps:","sidebar":"tutorialSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"Welcome to the Steinberg MIDI Remote API.","sidebar":"tutorialSidebar"},"v1_1":{"id":"v1_1","title":"New in v1.1","description":"Version 1.1 of the MIDI Remote API introduces two new features.","sidebar":"tutorialSidebar"},"versionhistory":{"id":"versionhistory","title":"API Versions + Compatibility","description":"This chapter provides an overview of the version history for the MIDI Remote API, highlighting changes introduced in each version. Additionally, it explains considerations for maintaining backward compatibility when using different versions of the API with various versions of Cubase / Nuendo.","sidebar":"tutorialSidebar"}}}')}}]);